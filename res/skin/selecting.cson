# This is a part of Sonorous.
# Copyright (c) 2005, 2007, 2009, 2012, 2013, 2014, Kang Seonghoon.
# See README.md and LICENSE.txt for details.

scalars: {
    logo = {$image: "../img/logo-prealpha.png"}
}

nodes: [
    # entries
    [
        {$clip: [[10,0], ["100%",300]]}
        {$rect: null
            at = [["100%-558","100%-125"], ["100%","100%"]]
            opacity = 0.2
            color = "white"}
        {$rect: "logo"
            at = [["100%-558","100%-125"], ["100%","100%"]]
            opacity = 0.4}
        {$$: "entries", $then: [
            {$$: "entry.inverted", $then: [
                {$rect: null
                    at = [[0,0], ["100%",20]]
                    color = "white"}
            ]}
            {$$: "entry.meta", $then: [
                {$text: {$$: "meta.level", $then: {$: "meta.level", format = "00"}, $else: "--"}
                    at = [2,2]
                    size = 16
                    color = "gray"}
                {$text: {$: "meta.title"}
                    at = [26,2]
                    size = 16
                    color = {$$: "entry.inverted", $then: "black", $else: "white"}}
            ], $else: [
                {$text: {$: "entry.path"}
                    at = [2,2]
                    size = 16
                    color = {$$: "entry.inverted", $then: "#444", $else: "#ccc"}}
            ]}
            {$$: "entry.hash", $then: [
                {$text: {$: "entry.hash"}
                    at = ["100%-4",2]
                    size = 16
                    color = "gray"
                    anchor = "right"}
            ]}
            {$cliptop: 20}
        ], $else: [
            {$$: "scanning", $then: [], $else: [
                {$text: "No BMS file found."
                    at = [2,2]
                    size = 16
                    color = "gray"}
            ]}
        ]}
    ]
    {$rect: null
        at = [[2,"2+296*entries.scrollstart"], [7,"2+296*entries.scrollend"]]
        color = "#c0c0c0"}
    {$rect: null
        at = [[0,301], ["100%",302]]
        color = "white"}

    # preloaded data if any
    [
        {$clip: [[0,300], ["100%","100%-20"]]}
        {$$: "preload", "loading": [
            {$text: "loading..."
                at = [4,4]
                size = 16
                color = "silver"}
        ], "loaded": [[
            # prints the banner first, so that the overflowing title etc. can overlap (for now)
            [
                {$clip: [["100%-302",24], ["100%-2",104]]}
                {$$: "meta.banner", $then: [
                    {$rect: "meta.banner", at = [[0,0], ["100%","100%"]]}
                ], $else: [
                    {$line: null, from = [0,0],      to = [0,"100%"],      color = "white"}
                    {$line: null, from = [0,0],      to = ["100%",0],      color = "white"}
                    {$line: null, from = [0,0],      to = ["100%","100%"], color = "white"}
                    {$line: null, from = [0,"100%"], to = ["100%",0],      color = "white"}
                    {$line: null, from = [0,"100%"], to = ["100%","100%"], color = "white"}
                    {$line: null, from = ["100%",0], to = ["100%","100%"], color = "white"}
                ]}
            ]

            {$text: [{$: "meta.duration", format = "..00:00.0"},
                     " | Level ", {$: "meta.level"},
                     " | BPM ", {$: "timeline.initbpm", format = "..0.00"},
                                {$$: "timeline.bpmchange", $then: "?"},
                     " | ", {$: "timeline.nnotes"},
                            {$$text: "timeline.nnotes", "1": " note", $default: " notes"},
                     " [", {$: "meta.nkeys"}, "KEY",
                           {$$: "timeline.longnote", $then: "-LN"},
                           {$$: "meta.difficulty",
                            "beginner": " BEGINNER", "normal": " NORMAL", "hard": " HARD",
                            "extra": " EXTRA", "insane": " INSANE"}, "]"]
                at = ["100%-2",4]
                size = 16
                color = "gray"
                anchor = "right"}

            {$$: "meta.genre", $then: [
                {$text: {$: "meta.genre"}, at = [4,4], size = 16, color = "silver"}
            ]}
            {$cliptop: 18}

            {$$: "meta.title", $then: [
                {$text: {$: "meta.title"}, at = [6,6], size = 32, color = "gray"}
                {$text: {$: "meta.title"}, at = [4,4], size = 32, color = "white"}
            ], $else: [
                {$text: "(no title)", at = [4,4], size = 32, color = "gray"}
            ]}
            {$cliptop: 36}

            {$$: "meta.subtitle", $then: [
                {$$len: "meta.subtitle", $then: [
                    {$text: {$: "meta.subtitle"}, at = [21,5], size = 16, color = "gray"}
                    {$text: {$: "meta.subtitle"}, at = [20,4], size = 16, color = "white"}
                    {$cliptop: 18}
                ]}
            ]}

            {$$: "meta.artist", $then: [
                {$text: {$: "meta.artist"}, at = [4,4], size = 16, color = "white"}
                {$cliptop: 18}
            ]}

            {$$: "meta.subartist", $then: [
                {$$len: "meta.subartist", $then: [
                    {$text: {$: "meta.subartist"}, at = [20,4], size = 16, color = "white"}
                    {$cliptop: 18}
                ]}
            ]}

            {$$: "meta.comment", $then: [
                {$$len: "meta.comment", $then: [
                    {$text: ["> ", {$: "meta.comment"}], at = [4,4], size = 16, color = "#80ff80"}
                    {$cliptop: 18}
                ]}
            ]}

            {$$: "messages", $then: [
                {$text: [{$$: "msg.severity", "fatal":   "* Fatal: ",
                                              "warning": "* Warning: ",
                                              "note":    "* Note: "}, {$: "msg.text"},
                         {$$: "msg.line", $then: [" (line ", {$: "msg.line"}, ")"]}]
                    at = [4,4]
                    size = 16
                    color = {$$: "msg.severity", "fatal":   "#ff4040",
                                                 "warning": "#ffff40",
                                                 "note":    "#40ffff"}}
                {$cliptop: 18}
                {$$: "msg",
                 "legacy-encoding": [
                    {$text: ["  (Detected \"", {$: "meta.encoding"},
                             "\" encoding with confidence ",
                             {$: "meta.encoding.confidence", format = "##0.00 * 100"}, "%)"]
                        at = [4,4]
                        size = 16
                        color = "#208080"}
                    {$cliptop: 18}
                 ],
                 $default: []}
            ]}
        ]], "failed": [
            {$text: ["error: ", {$: "preload.error"}]
                at = [4,4]
                size = 16
                color = "silver"}
        ]}
    ]

    # status bar, will overwrite any overflowing messages
    {$rect: null
        at = [[0,"100%-20"], ["100%","100%"]]
        color = "white"}
    {$text: ["Up/Down/PgUp/PgDn/Home/End: Select   Enter: ",
             {$$: "opts.autoplay", $then: "Autoplay", $else: "Play"},
             "   F5: Refresh   Esc: Quit"]
        at = [2,"100%-2"]
        size = 16
        color = "black"
        anchor = [0,1]}
]

# vim: syn=javascript ts=4 sts=4 sw=4 et ai
